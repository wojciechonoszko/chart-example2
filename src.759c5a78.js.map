{"version":3,"sources":["../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.esm.js","../node_modules/chart.js/auto/auto.esm.js","index.js"],"names":["fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","noop","uid","id","isNullOrUndef","value","isArray","type","Object","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","current","undefined","console","warn","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","push","sort","pop","isNumber","n","isNaN","x","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","A","B","C","D","E","F","c","f","hex","h1","h2","eq","isShort","v","r","g","hexParse","ret","hexString","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","rgbParse","exec","rgbString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map$1","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","replace","parseInt","names$1","nameParse","transparent","toLowerCase","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","Color","constructor","_rgb","_valid","valid","mix","color","weight","me","c1","c2","w2","w1","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","overrides","descriptors","getScope$1","node","split","set","root","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_lookup","table","cmp","hi","mid","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","forEach","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","items","Set","from","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Proxy","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","delete","createSubResolver","arr","filter","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","evt","native","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","getSegment","segment","bounds","startBound","endBound","_boundSegment","inside","prevValue","subStart","startIsBefore","shouldStart","shouldStop","endIsBefore","_boundSegments","segments","sub","findStartAndEnd","solidSegments","last","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","to","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","_top","_bottom","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","startEnd","swap","orig","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","BubbleController","getPixelForDecimal","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","controllers","__proto__","abstract","DateAdapter","formats","timestamp","amount","unit","diff","startOf","weekday","endOf","members","adapters","_date","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestRadialItems","evaluationFunc","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","tickFont","nestedLabel","highestLabelSize","_resolveTickFontOptions","valueAt","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","invalidatePlugins","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","avNogSpacingRadius","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","prevX","lastY","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","getLineByIndex","parseFillOption","fillOption","decodeFill","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","resolveTarget","propagate","visited","clipY","lineLoop","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","hLimits","vLimits","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","chartShowBtn","querySelector","chartShowBtnCtn","chartCloseBtn","chartContainer","chartDisplay","classList","toggle","pointBorderColor","pointRadius","pointBorderWidth","pointBackgroundColor","pointHoverRadius","pointHoverBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","myLineChart"],"mappings":"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","file":"src.759c5a78.js","sourceRoot":"../src","sourcesContent":["/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _toLeftRightCenter as $, _rlookupByKey as A, getAngleFromPoint as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, _isDomSupported as K, log10 as L, _factorize as M, finiteOrDefault as N, callback as O, PI as P, _addGrace as Q, toDegrees as R, _measureText as S, TAU as T, _int16Range as U, _alignPixel as V, clipArea as W, renderText as X, unclipArea as Y, toFont as Z, _arrayUnique as _, resolve as a, _angleDiff as a$, _alignStartEnd as a0, overrides as a1, merge as a2, _capitalize as a3, descriptors as a4, isFunction as a5, _attachContext as a6, _createResolver as a7, _descriptors as a8, mergeIf as a9, restoreTextDirection as aA, noop as aB, distanceBetweenPoints as aC, _setMinAndMaxByKey as aD, niceNum as aE, almostWhole as aF, almostEquals as aG, _decimalPlaces as aH, _longestText as aI, _filterBetween as aJ, _lookup as aK, getHoverColor as aL, clone$1 as aM, _merger as aN, _mergerIf as aO, _deprecated as aP, toFontString as aQ, splineCurve as aR, splineCurveMonotone as aS, getStyle as aT, fontString as aU, toLineHeight as aV, PITAU as aW, INFINITY as aX, RAD_PER_DEG as aY, QUARTER_PI as aZ, TWO_THIRDS_PI as a_, uid as aa, debounce as ab, retinaScale as ac, clearCanvas as ad, setsEqual as ae, _elementsEqual as af, _isClickEvent as ag, _isBetween as ah, _readValueToProps as ai, _updateBezierControlPoints as aj, _computeSegments as ak, _boundSegments as al, _steppedInterpolation as am, _bezierInterpolation as an, _pointInLine as ao, _steppedLineTo as ap, _bezierCurveTo as aq, drawPoint as ar, addRoundedRectPath as as, toTRBL as at, toTRBLCorners as au, _boundSegment as av, _normalizeAngle as aw, getRtlAdapter as ax, overrideTextDirection as ay, _textX as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, getRelativePosition as y, _isPointInArea as z };\n","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import {Chart, registerables} from '../dist/chart.esm';\n\nChart.register(...registerables);\n\nexport default Chart;\n","// npm install chart.js --save - chart.js library installation\n\nimport Chart from 'chart.js/auto';\n\n//import { getRelativePosition } from 'chart.js/helpers';\n\n const ctx = document.getElementById('myChart');\n\nconst chartShowBtn = document.querySelector('.chart-show-link');\nconst chartShowBtnCtn = document.querySelector('.chart-show-button-container');\nconst chartCloseBtn = document.querySelector('.chart-hide-link');\nconst chartContainer = document.querySelector('.chart-cnt');\n\nfunction chartDisplay() {\n  \n  chartShowBtn.classList.toggle('is-closed');\n  chartContainer.classList.toggle('is-closed');\n  \n}\n\n chartShowBtn.addEventListener('click', chartDisplay);\n chartCloseBtn.addEventListener('click', chartDisplay);\n\nlet data = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n    datasets: [\n        {\n            label: \"Temperature, C°\",\n            \n            \n            \n            //linia\n            borderColor : 'rgba(255, 107, 9, 1)',\n            pointBorderColor : 'rgba(255, 107, 9, 1)',\n            borderWidth : 2,\n            //kolor tla i legendy\n            fill: false, //czy wypelnic zbior\n            backgroundColor : 'rgba(236,115,87,0.1)', //wplywa tez na kolor w legendzie\n            //ustawienia punktu\n            pointStyle : 'rectRot',\n            pointRadius : 4,\n            pointBorderWidth: 1,\n            pointBackgroundColor : 'rgba(255, 107, 9, 1)',\n            //ustawienia punkut hover\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 3,\n            pointHoverBackgroundColor: 'rgba(255,255,255,1)',\n            pointHoverBorderColor: 'rgba(236,115,87,1)',\n            data: [50,30,40,30,32,25,30],\n        },\n        {\n            label: \"Humidity, %\",\n            //linia\n            borderColor : 'rgba(9, 6, 235, 1)',\n            pointBorderColor : 'rgba(9, 6, 235, 1)',\n            borderWidth : 2,\n            //kolor tla i legendy\n            fill: false, //czy wypelnic zbior\n            //backgroundColor : 'rgba(236,115,87,0.1)', //wplywa tez na kolor w legendzie\n            //ustawienia punktu\n            pointStyle : 'rectRot',\n            pointRadius : 4,\n            pointBorderWidth: 1,\n            pointBackgroundColor : 'rgba(9, 6, 235, 1)',\n            //ustawienia punktu hover\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 3,\n            pointHoverBackgroundColor: 'rgba(9, 6, 235, 1)',\n            pointHoverBorderColor: 'rgba(9, 6, 235, 1)',\n            data: [65, 59, 80, 81, 56, 55, 40],\n        },\n        {\n            label: \"Wind Speed, m/s\",\n            \n            borderColor : 'rgba(31, 211, 221, 0.8)',\n            pointBorderColor : 'rgba(31, 211, 221, 0.8)',\n            borderWidth : 2,\n            //kolor tla i legendy\n            fill: false, //czy wypelnic zbior\n            backgroundColor : 'rgba(31, 211, 221, 0.8)', //wplywa tez na kolor w legendzie\n            //ustawienia punktu\n            pointStyle : 'rectRot',\n            pointRadius : 4,\n            pointBorderWidth: 1,\n            pointBackgroundColor : 'rgba(31, 211, 221, 0.8)',\n            //ustawienia punkut hover\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 3,\n            pointHoverBackgroundColor: 'rgba(31, 211, 221, 0.8)',\n            pointHoverBorderColor: 'rgba(31, 211, 221, 0.8)',\n            data: [30, 20, 60, 50, 42, 15, 40],\n            \n        },\n        {\n          label: \" Atmosphere Pressure, mmHg\",\n          \n          borderColor : 'rgba(188, 25, 161, 0.8)',\n          pointBorderColor : 'rgba(188, 25, 161, 0.8)',\n          borderWidth : 2,\n          //kolor tla i legendy\n          fill: false, //czy wypelnic zbior\n          backgroundColor : 'rgba(188, 25, 161, 0.8)', //wplywa tez na kolor w legendzie\n          //ustawienia punktu\n          pointStyle : 'rectRot',\n          pointRadius : 4,\n          pointBorderWidth: 1,\n          pointBackgroundColor : 'rgba(188, 25, 161, 0.8)',\n          //ustawienia punkut hover\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 3,\n          pointHoverBackgroundColor: 'rgba(188, 25, 161, 0.8)',\n          pointHoverBorderColor: 'rgba(188, 25, 161, 0.8)',\n          data: [10, 35, 25, 55, 37, 75, 40],\n          \n      }\n    ]\n}\n\nlet options = {\n  maintainAspectRatio: false,\n  \n  responsive: true, //responsywnosc\n        hover: {\n            mode: 'dataset' //jak pokazywac tooltipy po najechaniu na punkty wykresu\n            //mode: 'label',\n        },\n    \n    \n    animations: {\n      \n        tension: {\n          duration: 1500,\n          easing: 'easeInCubic',\n          from: 5,\n          to: 0.15,\n          loop: false,\n          \n        }\n        \n        },\n    plugins: {\n      \n        title: {\n            display: true,\n            text: 'Chart Title EXAMPLE',\n            color: 'violet',\n            font: {\n              size: 30\n            }\n        },\n        \n        legend: {\n            position: 'top', //polozenie legendy\n            display: true, // pokazuj legende\n            labels: {\n              color: 'violet',\n              font: {\n                size: 14\n              },\n              usePointStyle: true,\n              pointStyle: 'rect'\n            },\n        }\n        \n    },\n    \n    \n    \n    \n    scales: {\n       \n        x: {\n            //type: 'linear',\n            display: true,\n            title: {\n              display: true,\n              text: 'Day of the year',\n              color: \"pink\",\n              \n              font: {               \n                size: 20\n              }\n            },\n           \n            ticks: {\n              font: {\n                size: 17\n              },\n              color: 'red',\n            },\n            grid: {\n              color: 'white'\n            }\n          },\n    y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'MONTHS values',\n          color: 'green',\n          font: {\n            size: 24\n          }\n        },\n        ticks: {\n          font: {\n            size: 17\n          },\n          color: 'violet',\n        },\n        grid: {\n          color: 'yellow'\n        }\n      },\n      \n    } \n\n};\n\nlet myLineChart = new Chart(ctx, {\n    type: 'line',\n    data: data,\n    options: options\n})\n\n// =============================================================================================================\n\n// const ctx = document.querySelector('#myChart').getContext('2d');\n// // ctx.height = 500;\n// import { Chart, registerables } from 'chart.js';\n\n// Chart.register(...registerables);\n\n// // let chart;\n\n// const chartShowBtn = document.querySelector('.chart-show-link');\n// const chartCloseBtn = document.querySelector('.chart-hide-link');\n// const chartContainer = document.querySelector('.chart-main-container');\n\n// function chartDisplay() {\n//   chartShowBtn.classList.toggle('is-closed');\n//   chartContainer.classList.toggle('is-closed');\n// }\n\n// chartShowBtn.addEventListener('click', chartDisplay);\n// chartCloseBtn.addEventListener('click', chartDisplay);\n\n// const average = values => {\n//   const sum = values.reduce((previous, current) => (current += previous));\n//   const avg = sum / values.length;\n//   return Number(avg.toFixed(1));\n// };\n\n// function getChartData(weather) {\n//   let chartData = {};\n\n//   chartData.days = weather.daysData.map(e => e.date.month + ' ' + e.date.day + ', ' + e.date.year);\n//   chartData.humidity = weather.daysData\n//     .map(e => e.forecasts.map(i => i.humidity))\n//     .map(j => average(j));\n//   chartData.pressure = weather.daysData\n//     .map(e => e.forecasts.map(i => i.pressure))\n//     .map(j => average(j));\n//   chartData.temperature = weather.daysData\n//     .map(e => e.forecasts.map(i => i.temperature))\n//     .map(j => average(j));\n//   chartData.speed = weather.daysData\n//     .map(e => e.forecasts.map(i => i.windSpeed))\n//     .map(j => average(j));\n\n//   let chartMain = {\n//     type: 'line',\n//     data: {\n//       labels: chartData.days,\n//       datasets: [\n//         {\n//           label: ' — Temperature, C°',\n//           backgroundColor: 'rgb(255, 107, 8)',\n//           borderColor: 'rgb(255, 107, 8)',\n//           data: chartData.temperature,\n//           fill: false,\n//         },\n//         {\n//           hidden: true,\n//           label: ' —  Humidity, %    ',\n//           backgroundColor: 'rgb(10, 6, 234)',\n//           borderColor: 'rgb(10, 6, 234)',\n//           data: chartData.humidity,\n//           fill: false,\n//         },\n//         {\n//           hidden: true,\n//           label: '—  Speed, m/s',\n//           backgroundColor: 'rgb(235, 155, 5)',\n//           borderColor: 'rgb(235, 155, 5)',\n//           data: chartData.speed,\n//           fill: false,\n//         },\n//         {\n//           hidden: true,\n//           label: ' —  Pressure, m/m',\n//           backgroundColor: 'rgb(5, 120, 6)',\n//           borderColor: 'rgb(5, 120, 6)',\n//           data: chartData.pressure,\n//           fill: false,\n//         },\n//       ],\n//     },\n//     options: {\n//       responsive: true,\n//       maintainAspectRatio: false,\n//       plugins: {\n//         title: {\n//           display: true,\n//           text: 'AVERAGE:',\n//           color: 'rgba(255, 255, 255, 0.54)',\n//         },\n//         legend: {\n//           align: 'center',\n\n//           labels: {\n//             boxWidth: 12,\n//             boxHeight: 12,\n//             padding: 10,\n//             font: {\n//               size: 15,\n//             },\n//           },\n//         },\n//       },\n\n//       scales: {\n//         x: {\n//           display: true,\n//           title: {\n//             display: true,\n//             text: '',\n//             color: '#911',\n//             font: {\n//               family: 'Comic Sans MS',\n//               size: 20,\n//               style: '',\n//               lineHeight: 1.2,\n//             },\n//             padding: { top: 20, left: 0, right: 0, bottom: 0 },\n//           },\n//           grid: {\n//             color: 'rgba(255, 255, 255, 0.54)',\n//           },\n//           ticks: {\n//             color: 'rgba(255, 255, 255, 0.54)',\n//           },\n//         },\n//         y: {\n//           display: true,\n//           title: {\n//             display: true,\n//             text: 'Value of indicators',\n//             color: 'rgba(255, 255, 255, 0.54)',\n//             font: {\n//               family: 'Lato',\n//               size: 14,\n//               style: 'normal',\n//               lineHeight: 1.2,\n//             },\n//             padding: { top: 30, left: 0, right: 0, bottom: 0 },\n//           },\n//           grid: {\n//             color: 'rgba(255, 255, 255, 0.54)',\n//           },\n//           ticks: {\n//             color: 'rgba(255, 255, 255, 0.54)',\n//           },\n//         },\n//       },\n//     },\n//   };\n\n//   return chartMain;\n// }\n\n// let weatherChart;\n\n// export default function renderChart(weather) {\n//   if (weatherChart) {\n//     // если график уже существует, то обновляем ему данные\n//     weatherChart.data.datasets = getChartData(weather).data.datasets; // просто дадим чарту новые датасеты, все остальные параметры не меняем\n//     weatherChart.update(); // обновляем график\n//   } else {\n//     // если график не существует (например, первая загрузка), то создадим его\n//     let chartData = getChartData(weather);\n//     weatherChart = new Chart(ctx, chartData); // передаем канвас и полный объект параметров\n//   }\n//   return weatherChart;\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ====================================================================================================================\n\n// const container = document.getElementById('myChart');\n// const btn = document.getElementById('btn');\n\n// const prepareChart = () => {\n//     const DataSet = (size, value, label) => {\n\n//         const generateValues = () =>\n//             [...Array(size)]\n//                 .fill(value)\n//                 .map(v => v * Math.random());\n\n//         const generateNumber = (min, max) =>\n//             Math.random() * (max - min) + min;\n\n//         const generateRGB = () =>\n//             [...Array(size)]\n//                 .map(v => [generateNumber(1, 255), generateNumber(1, 255), generateNumber(1, 255)]);\n\n//         const generateLabels = () =>\n//             [...Array(size).keys()]\n//                 .map(v => `${label} NO. ${v + 1}`);\n\n//         const generateColorsAndBorders = () => {\n//             const arr = generateRGB();\n//             return [\n//                 arr.map(v => `rgba(${v[0]},${v[1]},${v[2]},0.2)`),\n//                 arr.map(v => `rgba(${v[0]},${v[1]},${v[2]},1)`)\n//             ]\n//         };\n//         const colorAndBorders = generateColorsAndBorders();\n\n//         return {\n//             labels: generateLabels(),\n//             values: generateValues(),\n//             colors: colorAndBorders[0],\n//             borders: colorAndBorders[1]\n//         };\n//     };\n\n//     const SIZE = 6;\n//     const VALUE = 10;\n//     const LABEL = 'SALARY';\n//     const TITLE = 'SALARIES';\n//     const data = DataSet(SIZE, VALUE, LABEL);\n\n//     let chart = new Chart(container, {\n//         type: 'bar',\n//         data: {\n//             labels: data.labels,\n//             datasets: [{\n//                 label: LABEL,\n//                 data: data.values,\n//                 backgroundColor: data.colors,\n//                 borderColor: data.borders,\n//                 borderWidth: 1\n//             }]\n//         },\n//         options: {\n//             response: true,\n//             maintainAspectRatio: false,\n//             animation: {\n//                 duration: 1000,\n//                 onComplete: () => {\n//                     btn.textContent = 'CHANGE DATA';\n//                 }\n//             },\n//             legend: {\n//                 display: false\n//             },\n//             title: {\n//                 display: true,\n//                 text: TITLE\n//             }\n//         }\n//     });\n    \n//     function destroy() {\n        \n//         chart.destroy();\n//     };\n//     btn.addEventListener('click', (e) => {\n//         btn.textContent = 'LOADING ...';\n//         console.log(chart.id);\n\n//         // if ((chart.id === 0) || (chart.id === 1)){\n//         //     chart.destroy();\n//         // }\n//         destroy();\n//         prepareChart();\n\n//     });\n    \n    \n// };\n\n\n\n// function renderChart() {\n//     let myChart = document.getElementById('myChart').getContext('2d');\n//     console.log(myChart);\n//     myChart.destroy();\n//     myChart = new Chart(\n//         document.getElementById('myChart')\n//     )\n// }\n\n\n// window.addEventListener('load', prepareChart());\n\n\n\n\n\n"]}